package task3;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

class BankAccount {
    private double balance;

    public BankAccount(double initialBalance) {
        this.balance = initialBalance;
    }

    public double getBalance() {
        return balance;
    }

    public void deposit(double amount) {          //method to deposit
        if (amount > 0) {
            balance += amount;
        }
    }

    public boolean withdraw(double amount) {           //method to withdraw
        if (amount > 0 && balance >= amount) {
            balance -= amount;
            return true;
        } else {
            return false;
        }
    }
}

public class Main2 {
    private BankAccount account;
    private JFrame frame;
    private JTextField balanceField;
    private JTextField amountField;

    public Main2(BankAccount account) {
        this.account = account;

        frame = new JFrame("ATM Machine");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(300, 200);

        JPanel panel = new JPanel();
        frame.add(panel);

        JLabel balanceLabel = new JLabel("Balance:");
        balanceField = new JTextField(15);
        balanceField.setEditable(false);
        balanceField.setText("Rs." + account.getBalance());

        JLabel amountLabel = new JLabel("Enter Amount:");
        amountField = new JTextField(10);

        JButton checkBalanceButton = new JButton("Check Balance");
        JButton depositButton = new JButton("Deposit");
        JButton withdrawButton = new JButton("Withdraw");

        panel.add(balanceLabel);
        panel.add(balanceField);
        panel.add(amountLabel);
        panel.add(amountField);
        panel.add(checkBalanceButton);
        panel.add(depositButton);
        panel.add(withdrawButton);

        checkBalanceButton.addActionListener(new ActionListener() {         //method to perform action while clicking
            public void actionPerformed(ActionEvent e) {
                balanceField.setText("$" + account.getBalance());
            }
        });
          //action listener for deposit
        depositButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                try {
                    double amount = Double.parseDouble(amountField.getText());
                    account.deposit(amount);
                    balanceField.setText("$" + account.getBalance());
                    amountField.setText(""); // Clear the input field
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(frame, "Invalid input for deposit amount.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        });
          //action listener for withdraw
        withdrawButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                try {
                    double amount = Double.parseDouble(amountField.getText());
                    boolean success = account.withdraw(amount);
                    if (success) {
                        balanceField.setText("$" + account.getBalance());
                        amountField.setText(""); // Clear the input field
                    } else {
                        JOptionPane.showMessageDialog(frame, "Invalid withdrawal amount or insufficient balance.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(frame, "Invalid input for withdrawal amount.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        });


        frame.setVisible(true);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            BankAccount account = new BankAccount(1000);
            Main2 atm = new Main2(account);
        });
    }
}


